*******************RUNNING ALL regular TASKS*******************
=================================================================
===========ITERATION FOR JOB: modular_arithmetic==========================
=================================================================
 1) Start running STACK RNN for task=modular_arithmetic
------------Current Architecture---------------: stack_rnn
Finish running STACK RNN for task=modular_arithmetic
---------------------------------------------------
 2) Start running *STANDARD* transformer_encoder for task=modular_arithmetic *WITHOUT* POSITIONAL ENCODING
------------Current Architecture---------------: transformer_encoder
Finish running *STANDARD* transformer_encoder for task=modular_arithmetic *WITHOUT* POSITIONAL ENCODING
---------------------------------------------------
 3) Start running *STANDARD* transformer_encoder for task=modular_arithmetic  *WITH* POSITIONAL ENCODING
------------Current Architecture---------------: transformer_encoder
Finish running *STANDARD* transformer_encoder for task=modular_arithmetic *WITH* POSITIONAL ENCODING
---------------------------------------------------
 4) Start running *STACK AUGMENTED* transformer_encoder for task=modular_arithmetic *WITHOUT* POSITIONAL ENCODING
------------Current Architecture---------------: transformer_encoder
Finish running *STACK AUGMENTED* transformer_encoder for task=modular_arithmetic *WITHOUT* POSITIONAL ENCODING
---------------------------------------------------
 5) Start running *STACK AUGMENTED* transformer_encoder for task=modular_arithmetic *WITH* POSITIONAL ENCODING
------------Current Architecture---------------: transformer_encoder
Finish running *STACK AUGMENTED* transformer_encoder for task=modular_arithmetic *WITH* POSITIONAL ENCODING
=================================================================
===========ITERATION FOR JOB: even_pairs==========================
=================================================================
 1) Start running STACK RNN for task=even_pairs
------------Current Architecture---------------: stack_rnn
{'length': 4, 'accuracy': 1.0}
{'length': 8, 'accuracy': 1.0}
{'length': 12, 'accuracy': 1.0}
{'length': 16, 'accuracy': 1.0}
{'length': 20, 'accuracy': 1.0}
{'length': 24, 'accuracy': 1.0}
{'length': 28, 'accuracy': 1.0}
{'length': 32, 'accuracy': 1.0}
{'length': 36, 'accuracy': 1.0}
{'length': 40, 'accuracy': 1.0}
{'length': 44, 'accuracy': 1.0}
{'length': 48, 'accuracy': 1.0}
{'length': 52, 'accuracy': 1.0}
{'length': 56, 'accuracy': 1.0}
{'length': 60, 'accuracy': 1.0}
{'length': 64, 'accuracy': 1.0}
{'length': 68, 'accuracy': 1.0}
{'length': 72, 'accuracy': 1.0}
{'length': 76, 'accuracy': 1.0}
{'length': 80, 'accuracy': 1.0}
{'length': 84, 'accuracy': 1.0}
{'length': 88, 'accuracy': 1.0}
{'length': 92, 'accuracy': 1.0}
{'length': 96, 'accuracy': 1.0}
{'length': 100, 'accuracy': 1.0}
Finish running STACK RNN for task=even_pairs
---------------------------------------------------
 2) Start running *STANDARD* transformer_encoder for task=even_pairs *WITHOUT* POSITIONAL ENCODING
------------Current Architecture---------------: transformer_encoder
{'length': 4, 'accuracy': 0.640625}
{'length': 8, 'accuracy': 0.533203125}
{'length': 12, 'accuracy': 0.564453125}
{'length': 16, 'accuracy': 0.51953125}
{'length': 20, 'accuracy': 0.52734375}
{'length': 24, 'accuracy': 0.552734375}
{'length': 28, 'accuracy': 0.537109375}
{'length': 32, 'accuracy': 0.517578125}
{'length': 36, 'accuracy': 0.533203125}
{'length': 40, 'accuracy': 0.46875}
{'length': 44, 'accuracy': 0.5}
{'length': 48, 'accuracy': 0.55859375}
{'length': 52, 'accuracy': 0.57421875}
{'length': 56, 'accuracy': 0.517578125}
{'length': 60, 'accuracy': 0.517578125}
{'length': 64, 'accuracy': 0.521484375}
{'length': 68, 'accuracy': 0.505859375}
{'length': 72, 'accuracy': 0.5078125}
{'length': 76, 'accuracy': 0.509765625}
{'length': 80, 'accuracy': 0.521484375}
{'length': 84, 'accuracy': 0.541015625}
{'length': 88, 'accuracy': 0.498046875}
{'length': 92, 'accuracy': 0.51171875}
{'length': 96, 'accuracy': 0.52734375}
{'length': 100, 'accuracy': 0.4921875}
Finish running *STANDARD* transformer_encoder for task=even_pairs *WITHOUT* POSITIONAL ENCODING
---------------------------------------------------
 3) Start running *STANDARD* transformer_encoder for task=even_pairs  *WITH* POSITIONAL ENCODING
------------Current Architecture---------------: transformer_encoder
{'length': 4, 'accuracy': 1.0}
{'length': 8, 'accuracy': 0.998046875}
{'length': 12, 'accuracy': 0.986328125}
{'length': 16, 'accuracy': 0.990234375}
{'length': 20, 'accuracy': 0.982421875}
{'length': 24, 'accuracy': 0.962890625}
{'length': 28, 'accuracy': 0.970703125}
{'length': 32, 'accuracy': 0.953125}
{'length': 36, 'accuracy': 0.95703125}
{'length': 40, 'accuracy': 0.947265625}
{'length': 44, 'accuracy': 0.951171875}
{'length': 48, 'accuracy': 0.931640625}
{'length': 52, 'accuracy': 0.921875}
{'length': 56, 'accuracy': 0.900390625}
{'length': 60, 'accuracy': 0.916015625}
{'length': 64, 'accuracy': 0.880859375}
{'length': 68, 'accuracy': 0.916015625}
{'length': 72, 'accuracy': 0.890625}
{'length': 76, 'accuracy': 0.8984375}
{'length': 80, 'accuracy': 0.875}
{'length': 84, 'accuracy': 0.82421875}
{'length': 88, 'accuracy': 0.826171875}
{'length': 92, 'accuracy': 0.8359375}
{'length': 96, 'accuracy': 0.8359375}
{'length': 100, 'accuracy': 0.8125}
Finish running *STANDARD* transformer_encoder for task=even_pairs *WITH* POSITIONAL ENCODING
---------------------------------------------------
 4) Start running *STACK AUGMENTED* transformer_encoder for task=even_pairs *WITHOUT* POSITIONAL ENCODING
------------Current Architecture---------------: transformer_encoder
{'length': 4, 'accuracy': 1.0}
{'length': 8, 'accuracy': 1.0}
{'length': 12, 'accuracy': 1.0}
{'length': 16, 'accuracy': 1.0}
{'length': 20, 'accuracy': 1.0}
{'length': 24, 'accuracy': 1.0}
{'length': 28, 'accuracy': 1.0}
{'length': 32, 'accuracy': 1.0}
{'length': 36, 'accuracy': 1.0}
{'length': 40, 'accuracy': 1.0}
{'length': 44, 'accuracy': 1.0}
{'length': 48, 'accuracy': 1.0}
{'length': 52, 'accuracy': 1.0}
{'length': 56, 'accuracy': 1.0}
{'length': 60, 'accuracy': 1.0}
{'length': 64, 'accuracy': 1.0}
{'length': 68, 'accuracy': 1.0}
{'length': 72, 'accuracy': 1.0}
{'length': 76, 'accuracy': 1.0}
{'length': 80, 'accuracy': 1.0}
{'length': 84, 'accuracy': 1.0}
{'length': 88, 'accuracy': 1.0}
{'length': 92, 'accuracy': 1.0}
{'length': 96, 'accuracy': 1.0}
{'length': 100, 'accuracy': 1.0}
Finish running *STACK AUGMENTED* transformer_encoder for task=even_pairs *WITHOUT* POSITIONAL ENCODING
---------------------------------------------------
 5) Start running *STACK AUGMENTED* transformer_encoder for task=even_pairs *WITH* POSITIONAL ENCODING
------------Current Architecture---------------: transformer_encoder
{'length': 4, 'accuracy': 1.0}
{'length': 8, 'accuracy': 1.0}
{'length': 12, 'accuracy': 1.0}
{'length': 16, 'accuracy': 1.0}
{'length': 20, 'accuracy': 1.0}
{'length': 24, 'accuracy': 1.0}
{'length': 28, 'accuracy': 1.0}
{'length': 32, 'accuracy': 1.0}
{'length': 36, 'accuracy': 1.0}
{'length': 40, 'accuracy': 1.0}
{'length': 44, 'accuracy': 1.0}
{'length': 48, 'accuracy': 1.0}
{'length': 52, 'accuracy': 1.0}
{'length': 56, 'accuracy': 1.0}
{'length': 60, 'accuracy': 1.0}
{'length': 64, 'accuracy': 1.0}
{'length': 68, 'accuracy': 1.0}
{'length': 72, 'accuracy': 1.0}
{'length': 76, 'accuracy': 1.0}
{'length': 80, 'accuracy': 1.0}
{'length': 84, 'accuracy': 1.0}
{'length': 88, 'accuracy': 1.0}
{'length': 92, 'accuracy': 1.0}
{'length': 96, 'accuracy': 1.0}
{'length': 100, 'accuracy': 1.0}
Finish running *STACK AUGMENTED* transformer_encoder for task=even_pairs *WITH* POSITIONAL ENCODING
=================================================================
===========ITERATION FOR JOB: parity_check==========================
=================================================================
 1) Start running STACK RNN for task=parity_check
------------Current Architecture---------------: stack_rnn
{'length': 4, 'accuracy': 1.0}
{'length': 8, 'accuracy': 1.0}
{'length': 12, 'accuracy': 1.0}
{'length': 16, 'accuracy': 1.0}
{'length': 20, 'accuracy': 1.0}
{'length': 24, 'accuracy': 1.0}
{'length': 28, 'accuracy': 1.0}
{'length': 32, 'accuracy': 1.0}
{'length': 36, 'accuracy': 1.0}
{'length': 40, 'accuracy': 1.0}
{'length': 44, 'accuracy': 1.0}
{'length': 48, 'accuracy': 1.0}
{'length': 52, 'accuracy': 1.0}
{'length': 56, 'accuracy': 1.0}
{'length': 60, 'accuracy': 1.0}
{'length': 64, 'accuracy': 1.0}
{'length': 68, 'accuracy': 1.0}
{'length': 72, 'accuracy': 1.0}
{'length': 76, 'accuracy': 1.0}
{'length': 80, 'accuracy': 1.0}
{'length': 84, 'accuracy': 1.0}
{'length': 88, 'accuracy': 1.0}
{'length': 92, 'accuracy': 1.0}
{'length': 96, 'accuracy': 1.0}
{'length': 100, 'accuracy': 1.0}
Finish running STACK RNN for task=parity_check
---------------------------------------------------
 2) Start running *STANDARD* transformer_encoder for task=parity_check *WITHOUT* POSITIONAL ENCODING
------------Current Architecture---------------: transformer_encoder
{'length': 4, 'accuracy': 1.0}
{'length': 8, 'accuracy': 0.998046875}
{'length': 12, 'accuracy': 1.0}
{'length': 16, 'accuracy': 0.998046875}
{'length': 20, 'accuracy': 0.99609375}
{'length': 24, 'accuracy': 0.986328125}
{'length': 28, 'accuracy': 0.978515625}
{'length': 32, 'accuracy': 0.990234375}
{'length': 36, 'accuracy': 0.978515625}
{'length': 40, 'accuracy': 0.978515625}
{'length': 44, 'accuracy': 0.9375}
{'length': 48, 'accuracy': 0.84375}
{'length': 52, 'accuracy': 0.619140625}
{'length': 56, 'accuracy': 0.46875}
{'length': 60, 'accuracy': 0.435546875}
{'length': 64, 'accuracy': 0.421875}
{'length': 68, 'accuracy': 0.484375}
{'length': 72, 'accuracy': 0.4765625}
{'length': 76, 'accuracy': 0.455078125}
{'length': 80, 'accuracy': 0.4921875}
{'length': 84, 'accuracy': 0.48046875}
{'length': 88, 'accuracy': 0.53125}
{'length': 92, 'accuracy': 0.51171875}
{'length': 96, 'accuracy': 0.525390625}
{'length': 100, 'accuracy': 0.525390625}
Finish running *STANDARD* transformer_encoder for task=parity_check *WITHOUT* POSITIONAL ENCODING
---------------------------------------------------
 3) Start running *STANDARD* transformer_encoder for task=parity_check  *WITH* POSITIONAL ENCODING
------------Current Architecture---------------: transformer_encoder
{'length': 4, 'accuracy': 1.0}
{'length': 8, 'accuracy': 1.0}
{'length': 12, 'accuracy': 1.0}
{'length': 16, 'accuracy': 1.0}
{'length': 20, 'accuracy': 0.998046875}
{'length': 24, 'accuracy': 0.986328125}
{'length': 28, 'accuracy': 0.96875}
{'length': 32, 'accuracy': 0.9296875}
{'length': 36, 'accuracy': 0.88671875}
{'length': 40, 'accuracy': 0.78125}
{'length': 44, 'accuracy': 0.75}
{'length': 48, 'accuracy': 0.63671875}
{'length': 52, 'accuracy': 0.498046875}
{'length': 56, 'accuracy': 0.423828125}
{'length': 60, 'accuracy': 0.478515625}
{'length': 64, 'accuracy': 0.53515625}
{'length': 68, 'accuracy': 0.4921875}
{'length': 72, 'accuracy': 0.498046875}
{'length': 76, 'accuracy': 0.53125}
{'length': 80, 'accuracy': 0.5}
{'length': 84, 'accuracy': 0.53125}
{'length': 88, 'accuracy': 0.4921875}
{'length': 92, 'accuracy': 0.486328125}
{'length': 96, 'accuracy': 0.470703125}
{'length': 100, 'accuracy': 0.474609375}
Finish running *STANDARD* transformer_encoder for task=parity_check *WITH* POSITIONAL ENCODING
---------------------------------------------------
 4) Start running *STACK AUGMENTED* transformer_encoder for task=parity_check *WITHOUT* POSITIONAL ENCODING
------------Current Architecture---------------: transformer_encoder
{'length': 4, 'accuracy': 1.0}
{'length': 8, 'accuracy': 1.0}
{'length': 12, 'accuracy': 0.998046875}
{'length': 16, 'accuracy': 1.0}
{'length': 20, 'accuracy': 0.994140625}
{'length': 24, 'accuracy': 0.990234375}
{'length': 28, 'accuracy': 0.986328125}
{'length': 32, 'accuracy': 0.986328125}
{'length': 36, 'accuracy': 0.9765625}
{'length': 40, 'accuracy': 0.90625}
{'length': 44, 'accuracy': 0.7734375}
{'length': 48, 'accuracy': 0.5}
{'length': 52, 'accuracy': 0.41796875}
{'length': 56, 'accuracy': 0.375}
{'length': 60, 'accuracy': 0.453125}
{'length': 64, 'accuracy': 0.5234375}
{'length': 68, 'accuracy': 0.490234375}
{'length': 72, 'accuracy': 0.515625}
{'length': 76, 'accuracy': 0.537109375}
{'length': 80, 'accuracy': 0.509765625}
{'length': 84, 'accuracy': 0.517578125}
{'length': 88, 'accuracy': 0.46875}
{'length': 92, 'accuracy': 0.490234375}
{'length': 96, 'accuracy': 0.474609375}
{'length': 100, 'accuracy': 0.474609375}
Finish running *STACK AUGMENTED* transformer_encoder for task=parity_check *WITHOUT* POSITIONAL ENCODING
---------------------------------------------------
 5) Start running *STACK AUGMENTED* transformer_encoder for task=parity_check *WITH* POSITIONAL ENCODING
------------Current Architecture---------------: transformer_encoder
{'length': 4, 'accuracy': 1.0}
{'length': 8, 'accuracy': 1.0}
{'length': 12, 'accuracy': 1.0}
{'length': 16, 'accuracy': 1.0}
{'length': 20, 'accuracy': 0.998046875}
{'length': 24, 'accuracy': 0.974609375}
{'length': 28, 'accuracy': 0.970703125}
{'length': 32, 'accuracy': 0.92578125}
{'length': 36, 'accuracy': 0.6875}
{'length': 40, 'accuracy': 0.474609375}
{'length': 44, 'accuracy': 0.314453125}
{'length': 48, 'accuracy': 0.353515625}
{'length': 52, 'accuracy': 0.443359375}
{'length': 56, 'accuracy': 0.52734375}
{'length': 60, 'accuracy': 0.517578125}
{'length': 64, 'accuracy': 0.474609375}
{'length': 68, 'accuracy': 0.521484375}
{'length': 72, 'accuracy': 0.490234375}
{'length': 76, 'accuracy': 0.451171875}
{'length': 80, 'accuracy': 0.46875}
{'length': 84, 'accuracy': 0.482421875}
{'length': 88, 'accuracy': 0.515625}
{'length': 92, 'accuracy': 0.501953125}
{'length': 96, 'accuracy': 0.52734375}
{'length': 100, 'accuracy': 0.529296875}
Finish running *STACK AUGMENTED* transformer_encoder for task=parity_check *WITH* POSITIONAL ENCODING
=================================================================
===========ITERATION FOR JOB: cycle_navigation==========================
=================================================================
 1) Start running STACK RNN for task=cycle_navigation
------------Current Architecture---------------: stack_rnn
{'length': 4, 'accuracy': 1.0}
{'length': 8, 'accuracy': 1.0}
{'length': 12, 'accuracy': 1.0}
{'length': 16, 'accuracy': 1.0}
{'length': 20, 'accuracy': 1.0}
{'length': 24, 'accuracy': 1.0}
{'length': 28, 'accuracy': 0.998046875}
{'length': 32, 'accuracy': 1.0}
{'length': 36, 'accuracy': 0.998046875}
{'length': 40, 'accuracy': 0.998046875}
{'length': 44, 'accuracy': 0.990234375}
{'length': 48, 'accuracy': 0.990234375}
{'length': 52, 'accuracy': 0.98828125}
{'length': 56, 'accuracy': 0.97265625}
{'length': 60, 'accuracy': 0.982421875}
{'length': 64, 'accuracy': 0.9921875}
{'length': 68, 'accuracy': 0.974609375}
{'length': 72, 'accuracy': 0.958984375}
{'length': 76, 'accuracy': 0.955078125}
{'length': 80, 'accuracy': 0.96484375}
{'length': 84, 'accuracy': 0.947265625}
{'length': 88, 'accuracy': 0.90625}
{'length': 92, 'accuracy': 0.93359375}
{'length': 96, 'accuracy': 0.927734375}
{'length': 100, 'accuracy': 0.904296875}
Finish running STACK RNN for task=cycle_navigation
---------------------------------------------------
 2) Start running *STANDARD* transformer_encoder for task=cycle_navigation *WITHOUT* POSITIONAL ENCODING
------------Current Architecture---------------: transformer_encoder
{'length': 4, 'accuracy': 1.0}
{'length': 8, 'accuracy': 1.0}
{'length': 12, 'accuracy': 1.0}
{'length': 16, 'accuracy': 1.0}
{'length': 20, 'accuracy': 1.0}
{'length': 24, 'accuracy': 0.998046875}
{'length': 28, 'accuracy': 0.998046875}
{'length': 32, 'accuracy': 0.998046875}
{'length': 36, 'accuracy': 0.98828125}
{'length': 40, 'accuracy': 0.98828125}
{'length': 44, 'accuracy': 0.96875}
{'length': 48, 'accuracy': 0.953125}
{'length': 52, 'accuracy': 0.9375}
{'length': 56, 'accuracy': 0.931640625}
{'length': 60, 'accuracy': 0.921875}
{'length': 64, 'accuracy': 0.9140625}
{'length': 68, 'accuracy': 0.884765625}
{'length': 72, 'accuracy': 0.79296875}
{'length': 76, 'accuracy': 0.740234375}
{'length': 80, 'accuracy': 0.70703125}
{'length': 84, 'accuracy': 0.599609375}
{'length': 88, 'accuracy': 0.462890625}
{'length': 92, 'accuracy': 0.333984375}
{'length': 96, 'accuracy': 0.240234375}
{'length': 100, 'accuracy': 0.24609375}
Finish running *STANDARD* transformer_encoder for task=cycle_navigation *WITHOUT* POSITIONAL ENCODING
---------------------------------------------------
 3) Start running *STANDARD* transformer_encoder for task=cycle_navigation  *WITH* POSITIONAL ENCODING
------------Current Architecture---------------: transformer_encoder
{'length': 4, 'accuracy': 1.0}
{'length': 8, 'accuracy': 1.0}
{'length': 12, 'accuracy': 1.0}
{'length': 16, 'accuracy': 1.0}
{'length': 20, 'accuracy': 0.984375}
{'length': 24, 'accuracy': 0.982421875}
{'length': 28, 'accuracy': 0.962890625}
{'length': 32, 'accuracy': 0.951171875}
{'length': 36, 'accuracy': 0.9140625}
{'length': 40, 'accuracy': 0.9140625}
{'length': 44, 'accuracy': 0.88671875}
{'length': 48, 'accuracy': 0.8828125}
{'length': 52, 'accuracy': 0.853515625}
{'length': 56, 'accuracy': 0.794921875}
{'length': 60, 'accuracy': 0.755859375}
{'length': 64, 'accuracy': 0.658203125}
{'length': 68, 'accuracy': 0.658203125}
{'length': 72, 'accuracy': 0.58984375}
{'length': 76, 'accuracy': 0.564453125}
{'length': 80, 'accuracy': 0.515625}
{'length': 84, 'accuracy': 0.458984375}
{'length': 88, 'accuracy': 0.37109375}
{'length': 92, 'accuracy': 0.392578125}
{'length': 96, 'accuracy': 0.37890625}
{'length': 100, 'accuracy': 0.3359375}
Finish running *STANDARD* transformer_encoder for task=cycle_navigation *WITH* POSITIONAL ENCODING
---------------------------------------------------
 4) Start running *STACK AUGMENTED* transformer_encoder for task=cycle_navigation *WITHOUT* POSITIONAL ENCODING
------------Current Architecture---------------: transformer_encoder
{'length': 4, 'accuracy': 1.0}
{'length': 8, 'accuracy': 0.99609375}
{'length': 12, 'accuracy': 0.998046875}
{'length': 16, 'accuracy': 1.0}
{'length': 20, 'accuracy': 0.9921875}
{'length': 24, 'accuracy': 0.994140625}
{'length': 28, 'accuracy': 0.98828125}
{'length': 32, 'accuracy': 0.986328125}
{'length': 36, 'accuracy': 0.96484375}
{'length': 40, 'accuracy': 0.966796875}
{'length': 44, 'accuracy': 0.958984375}
{'length': 48, 'accuracy': 0.94921875}
{'length': 52, 'accuracy': 0.955078125}
{'length': 56, 'accuracy': 0.904296875}
{'length': 60, 'accuracy': 0.90625}
{'length': 64, 'accuracy': 0.876953125}
{'length': 68, 'accuracy': 0.828125}
{'length': 72, 'accuracy': 0.71875}
{'length': 76, 'accuracy': 0.6328125}
{'length': 80, 'accuracy': 0.513671875}
{'length': 84, 'accuracy': 0.41015625}
{'length': 88, 'accuracy': 0.298828125}
{'length': 92, 'accuracy': 0.271484375}
{'length': 96, 'accuracy': 0.240234375}
{'length': 100, 'accuracy': 0.240234375}
Finish running *STACK AUGMENTED* transformer_encoder for task=cycle_navigation *WITHOUT* POSITIONAL ENCODING
---------------------------------------------------
 5) Start running *STACK AUGMENTED* transformer_encoder for task=cycle_navigation *WITH* POSITIONAL ENCODING
------------Current Architecture---------------: transformer_encoder
{'length': 4, 'accuracy': 1.0}
{'length': 8, 'accuracy': 1.0}
{'length': 12, 'accuracy': 0.998046875}
{'length': 16, 'accuracy': 0.998046875}
{'length': 20, 'accuracy': 0.99609375}
{'length': 24, 'accuracy': 0.998046875}
{'length': 28, 'accuracy': 0.99609375}
{'length': 32, 'accuracy': 1.0}
{'length': 36, 'accuracy': 0.998046875}
{'length': 40, 'accuracy': 0.98828125}
{'length': 44, 'accuracy': 0.98828125}
{'length': 48, 'accuracy': 0.978515625}
{'length': 52, 'accuracy': 0.9453125}
{'length': 56, 'accuracy': 0.94140625}
{'length': 60, 'accuracy': 0.921875}
{'length': 64, 'accuracy': 0.85546875}
{'length': 68, 'accuracy': 0.806640625}
{'length': 72, 'accuracy': 0.716796875}
{'length': 76, 'accuracy': 0.654296875}
{'length': 80, 'accuracy': 0.607421875}
{'length': 84, 'accuracy': 0.55078125}
{'length': 88, 'accuracy': 0.44140625}
{'length': 92, 'accuracy': 0.390625}
{'length': 96, 'accuracy': 0.345703125}
{'length': 100, 'accuracy': 0.3203125}
Finish running *STACK AUGMENTED* transformer_encoder for task=cycle_navigation *WITH* POSITIONAL ENCODING
